---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { InteractiveCarousel } from '../components/sideCarousel';
import '@/styles/globals.css'

type Props = CollectionEntry<'events'>['data'];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}
			table {
				width: 100%;
				border-collapse: collapse;
			}
			.content {
				position: relative;
				z-index: 1;
				width: 100%;
				height: 100%;
				display: flex;
				align-items: center;
				justify-content: center;
			}
			th {
				vertical-align: top;
				margin: 5%;
			}
			.carousel-container {
				display: flex;
				justify-content: center;
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<div class="content">
				<table>
					<tr>
						<th>
							<div class="carousel-container">
								<InteractiveCarousel nImages={5} startImage={10} client:load />
							</div>
						</th>
						<th>
							<article>
								<div class="hero-image">
									{heroImage && <img width={700} height={210} src={heroImage} alt="" />}
								</div>
								<div class="prose">
									<div class="title">
										<div class="date">
											{pubDate && <FormattedDate date={pubDate} />}
											{updatedDate && (
												<div class="last-updated-on">
													Last updated on <FormattedDate date={updatedDate} />
												</div>
											)}
										</div>
										<h1>{title}</h1>
										<hr />
									</div>
									<slot />
								</div>
							</article>
						</th>
						<th>
							<div class="carousel-container">
								<InteractiveCarousel nImages={5} startImage={0} client:load />
							</div>
						</th>
					</tr>
				</table>
			</div>
		</main>
		<Footer />
	</body>
</html>
